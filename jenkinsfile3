pipeline {
    agent {label 'slave01'}
    stages {
        stage ('Coverity Analysis') {
            steps {
                dir("/workspace/workspace/DevSecOps-Synopsys"){
                withCredentials([usernamePassword(credentialsId: 'coverity', passwordVariable: 'password', usernameVariable: 'username')])             {
               sh '''
                    git checkout code
                    /opt/cov-analysis-linux64-2023.3.0/bin/cov-configure --java
                    /opt/cov-analysis-linux64-2023.3.0/bin/cov-build --dir /workspace/workspace/DevSecOps-Synopsys mvn clean package -Dcheckstyle.skip
                    /opt/cov-analysis-linux64-2023.3.0/bin/cov-analyze --dir /workspace/workspace/DevSecOps-Synopsys
                    /opt/cov-analysis-linux64-2023.3.0/bin/cov-manage-im --host 10.107.85.178 --mode streams --add --set name:DevOps-Synopsys -user $username -password $password || true
                    /opt/cov-analysis-linux64-2023.3.0/bin/cov-manage-im --host 10.107.85.178 --mode projects --add --set name:spring-petclinic --insert stream:DevOps-Synopsys  -user $username -password $password || true
                    /opt/cov-analysis-linux64-2023.3.0/bin/cov-commit-defects --host 10.107.85.178 --stream DevOps-Synopsys --dir /workspace/workspace/DevSecOps-Synopsys --user $username --password $password
                '''
              }
            }
          }
        }
        stage ('BlackDuck Analysis') {
            steps {
                dir("/workspace/workspace/DevSecOps-Synopsys"){
                withCredentials([string(credentialsId: 'BlackDuck-token', variable: 'SECRET')]) {
                sh '''
                    mvn -N io.takari:maven:wrapper
                    java -jar /opt/BlackDuck/synopsys-detect-8.8.0.jar --detect.project.name=spring-petclinic --detect.project.version=1.0.0 --blackduck.url=https://webserver/ --blackduck.api.token=$SECRET 
                '''
              } 
            }
          }
        }

        stage("Publish to Nexus Repository Manager") {
            steps {
             nexusArtifactUploader credentialsId: 'nexus-uploader', groupId: 'spring-petclinic', nexusUrl: '10.107.85.168:8081/repository/spring-petclinic-artifact/', nexusVersion: 'nexus3', protocol: 'http', repository: 'spring-petclinic-artifact', version: '3.0.0-SNAPSHOT'
           }
	}

        stage ('login quay') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'quay', passwordVariable: 'password', usernameVariable: 'username')]) {
                sh '''
                    podman login quay.ocp49.redhat.poc --tls-verify=false -u $username -p $password
                '''
              } 
            }
        }
        stage ('login redhat') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'redhat', passwordVariable: 'password', usernameVariable: 'username')]) {
                sh '''
                    podman login registry.redhat.io --tls-verify=false -u $username -p $password
                '''
              }
            }
        }

        stage('Build container images') { 
            steps {
              dir("/workspace/workspace/Add Quay/"){
                sh 'podman build -t quay.ocp49.redhat.poc/quayadmin/mongoapp .'
                }
            }
	}		
        stage("Upload container images") {
            steps {
                sh '''
                    podman push quay.ocp49.redhat.poc/quayadmin/mongoapp
                '''
            }
         }

	}
}
